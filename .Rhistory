time = as.POSIXct(time, tz = ""),
systolicbp = as.double(systolicbp),
diastolicbp = as.double(diastolicbp),
map = as.double(map),
)
# Body temperature
raw_temp <- read.csv("data/Body_temperature.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_temp <- as_tibble(raw_temp)
names(raw_temp)[2] <- "time"
names(raw_temp)[3] <- "temperature"
raw_temp <- raw_temp %>%
clean_names %>%
select("pmid", "time", "temperature") %>%
mutate(
time = as.POSIXct(time, tz = ""),
temperature = as.double(temperature)
)
# Heart rate
raw_hr <- read.csv("data/Heart_rate.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_hr <- as_tibble(raw_hr)
names(raw_hr)[2] <- "time"
names(raw_hr)[3] <- "hr"
raw_hr <- raw_hr %>%
clean_names %>%
select("pmid", "time", "hr") %>%
mutate(
time = as.POSIXct(time, tz = ""),
hr = as.double(hr)
)
# Patient information
raw_master <- read.csv("data/Patient_master_data.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master <- as_tibble(raw_master)
raw_master <- raw_master %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
date_of_birth = as.Date(date_of_birth)
)
# Patient information with sepsis labels
raw_master_label <- read.csv("data/Patient_master_data_label.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master_label <- as_tibble(raw_master_label)
raw_master_label <- raw_master_label %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
discharge = as.Date(discharge),
admission = as.Date(admission),
label = as.factor(label)
)
# Pulse
raw_pulse <- read.csv("data/Pulse.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_pulse <- as_tibble(raw_pulse)
names(raw_pulse)[2] <- "time"
names(raw_pulse)[3] <- "pulse"
raw_pulse <- raw_pulse %>%
clean_names %>%
select("pmid", "time", "pulse") %>%
mutate(
time = as.POSIXct(time, tz = ""),
pulse = as.double(pulse)
)
# Respiratory Rate
raw_resp <- read.csv("data/Respiratory_rate.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_resp <- as_tibble(raw_resp)
names(raw_resp)[2] <- "time"
names(raw_resp)[3] <- "rr"
raw_resp <- raw_resp %>%
clean_names %>%
select("pmid", "time", "rr") %>%
mutate(
time = as.POSIXct(time, tz = ""),
rr = as.double(rr)
)
# Oxygen saturation
raw_tom <- read.csv("data/Transcutaneous_oxygen_measurement.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_tom <- as_tibble(raw_tom)
names(raw_tom)[2] <- "time"
names(raw_tom)[3] <- "sao2"
raw_tom <- raw_tom %>%
clean_names %>%
select("pmid", "time", "sao2") %>%
mutate(
time = as.POSIXct(time, tz = ""),
sao2 = as.double(sao2)
)
# Merge all data sets into one final data set
raw <- NULL
raw <- merge(raw_hr, raw_pulse, by = c("pmid", "time"), all.x = TRUE, all.y = TRUE)
raw <- merge(raw, raw_tom, by = c("pmid", "time"), all.x = TRUE, all.y = TRUE)
raw <- merge(raw, raw_resp, by = c("pmid", "time"), all.x = TRUE, all.y = TRUE)
raw <- merge(raw, raw_bp, by = c("pmid", "time"), all.x = TRUE, all.y = TRUE)
raw <- merge(raw, raw_temp, by = c("pmid", "time"), all.x = TRUE, all.y = TRUE)
raw <- as_tibble(raw)
# Merge patient information and sepsis labels
raw_master_full <- merge(raw_master, raw_master_label, by = c("pmid"), all.x = TRUE, all.y = TRUE)
raw_master_full <- raw_master_full %>%
select("pmid", "sex", "date_of_birth","label")
raw_master_full <- raw_master_full[raw_master_full$pmid %in% raw_master$pmid, ]
levels(raw_master_full$label) <- c(levels(raw_master_full$label), "NoLabel")
raw_master_full[is.na(raw_master_full)] <- "NoLabel"
raw_master_full <- as_tibble(raw_master_full)
# Delete duplicates
raw <- raw %>% distinct(time, .keep_all = TRUE)
# Drop NAs
raw <- na.omit(raw)
# Rename column names in raw data set
names(raw)[1] <- "id"
names(raw)[2] <- "timepoint"
# Add the sepsis label as "treatment"
raw$treatment <- NA
raw$treatment <- as.factor(raw$treatment)
levels(raw$treatment) <- levels(raw_master_full$label)
for (l in 1:nrow(raw)) {
label <- raw_master_full$label[raw_master_full$pmid == as.character(raw$id[l])]
raw$treatment[l] <- as.factor(label)
}
# hRELSA  -----------------------------------------------------------------
# Select the variables to use the hRELSA with
vars <- c("hr", "sao2", "rr", "systolicbp", "temperature")
turnvars <- NULL
ambivars <- c("hr", "rr", "systolicbp", "temperature")
zvars <- NULL
dropvars <- NULL
# Get reference values
raw_norm <- read_excel("data/reference_values.xlsx", sheet = 1)
# Deletion of pulse
raw_norm <- raw_norm %>% select("age", all_of(vars))
# Generate day column
raw <- hrelsa_days(raw, format = "timecode", formthis = "timepoint", newdayone = TRUE)
# Deletion of unrealistic entries
raw <- raw %>%
filter(systolicbp > 0 | is.na(systolicbp)) %>%
filter(map > 0 | is.na(diastolicbp)) %>%
filter(temperature > 30 | is.na(temperature)) %>%
filter(map < systolicbp)
# Format the data
dat <- hrelsa_format(raw, id = "id", time = "time", treatment = "treatment", vars = vars, included_realtime = "timepoint")
# Fetch data for maximal severity evaluation
reference_dat <- dat %>% filter(treatment == "NoSepsis")
bsl <- hrelsa_adaptive_baselines(dat, reference_dat, vars = vars, turnvars = turnvars, ambivars = ambivars, realtime = "timepoint",
dob_dat = raw_master_full, dob_data_id_col = 1, dob_data_dob_col = 3,
norm_dat = raw_norm, norm_dat_names = names(raw_norm))
pre <- bsl$pre
# Generate final data
final <- hrelsa_final(pre, bsl, drop = dropvars, turnvars = turnvars, ambivars = ambivars, zvars = zvars)
# Generate some analysis
analysis <- hrelsa_analysis(final)
sink("analysis.txt")
print(analysis)
sink()
analysis
curve <- final %>%
group_by(id, treatment) %>%
summarise(max = max(as.numeric(unlist(rms)), na.rm = TRUE)) %>%
mutate(treatment = factor(treatment, levels = c("NoSepsis","Sepsis"), labels = c("No Sepsis", "Sepsis")))
p5 <- curve %>%
ggplot(aes(x = treatment, y = max, color = treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(), size = 3, alpha = 0.75) +
geom_hline(yintercept=1, linetype="dashed") +
#geom_text(aes(x = 2.4, y = 1.03, label = "Maximum", color = "black")) +
labs (x = "", y = expression('hRELSA'[max])) +
theme_classic() +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = c("#1F77B4","#FF7F0E"))
p5
describeBy(curve$max, curve$treatment)
t.test(max ~ treatment, data = curve, var.equal = FALSE, alternative = "two.sided")
levels(curve$treatment) <- c("NoSepsis", "Sepsis", NA)
cohensD(max ~ treatment, data = curve)
prep_final <- (final %>% select(all_of(vars)))
cor(prep_final, method = "pearson", use = "complete.obs")
#'
#' R file to reproduce the data and figs in the hRELSA publication
#'
# Libraries ---------------------------------------------------------------
library(hRELSA)
library(tidyverse)
library(janitor)
library(readxl)
library(lubridate)
library(ggbreak)
library(patchwork)
library(lme4)
library(lmerTest)
library(ggpubr)
library(ggplot2)
library(psych)
library(lsr)
# Data setup -------------------------------------------------------------
# Blood pressure
raw_bp <- read.csv("data/Blood_pressure_invasive.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_bp <- as_tibble(raw_bp)
names(raw_bp)[2] <- "time"
names(raw_bp)[3] <- "systolicbp"
names(raw_bp)[4] <- "diastolicbp"
names(raw_bp)[5] <- "map"
raw_bp <- raw_bp %>%
clean_names %>%
select("pmid", "time", "systolicbp", "diastolicbp", "map") %>%
mutate(
time = as.POSIXct(time, tz = ""),
systolicbp = as.double(systolicbp),
diastolicbp = as.double(diastolicbp),
map = as.double(map),
)
# Body temperature
raw_temp <- read.csv("data/Body_temperature.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_temp <- as_tibble(raw_temp)
names(raw_temp)[2] <- "time"
names(raw_temp)[3] <- "temperature"
raw_temp <- raw_temp %>%
clean_names %>%
select("pmid", "time", "temperature") %>%
mutate(
time = as.POSIXct(time, tz = ""),
temperature = as.double(temperature)
)
# Heart rate
raw_hr <- read.csv("data/Heart_rate.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_hr <- as_tibble(raw_hr)
names(raw_hr)[2] <- "time"
names(raw_hr)[3] <- "hr"
raw_hr <- raw_hr %>%
clean_names %>%
select("pmid", "time", "hr") %>%
mutate(
time = as.POSIXct(time, tz = ""),
hr = as.double(hr)
)
# Patient information
raw_master <- read.csv("data/Patient_master_data.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master <- as_tibble(raw_master)
raw_master <- raw_master %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
date_of_birth = as.Date(date_of_birth)
)
# Patient information with sepsis labels
raw_master_label <- read.csv("data/Patient_master_data_label.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master_label <- as_tibble(raw_master_label)
raw_master_label <- raw_master_label %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
discharge = as.Date(discharge),
admission = as.Date(admission),
label = as.factor(label)
)
# Pulse
raw_pulse <- read.csv("data/Pulse.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_pulse <- as_tibble(raw_pulse)
names(raw_pulse)[2] <- "time"
names(raw_pulse)[3] <- "pulse"
raw_pulse <- raw_pulse %>%
clean_names %>%
select("pmid", "time", "pulse") %>%
mutate(
time = as.POSIXct(time, tz = ""),
pulse = as.double(pulse)
)
# Respiratory Rate
raw_resp <- read.csv("data/Respiratory_rate.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_resp <- as_tibble(raw_resp)
names(raw_resp)[2] <- "time"
names(raw_resp)[3] <- "rr"
raw_resp <- raw_resp %>%
clean_names %>%
select("pmid", "time", "rr") %>%
mutate(
time = as.POSIXct(time, tz = ""),
rr = as.double(rr)
)
# Oxygen saturation
raw_tom <- read.csv("data/Transcutaneous_oxygen_measurement.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_tom <- as_tibble(raw_tom)
names(raw_tom)[2] <- "time"
names(raw_tom)[3] <- "sao2"
raw_tom <- raw_tom %>%
clean_names %>%
select("pmid", "time", "sao2") %>%
mutate(
time = as.POSIXct(time, tz = ""),
sao2 = as.double(sao2)
)
# Merge all data sets into one final data set
raw <- NULL
raw <- merge(raw_hr, raw_pulse, by = c("pmid", "time"), all.x = TRUE, all.y = TRUE)
raw <- merge(raw, raw_tom, by = c("pmid", "time"), all.x = TRUE, all.y = TRUE)
raw <- merge(raw, raw_resp, by = c("pmid", "time"), all.x = TRUE, all.y = TRUE)
raw <- merge(raw, raw_bp, by = c("pmid", "time"), all.x = TRUE, all.y = TRUE)
raw <- merge(raw, raw_temp, by = c("pmid", "time"), all.x = TRUE, all.y = TRUE)
raw <- as_tibble(raw)
# Merge patient information and sepsis labels
raw_master_full <- merge(raw_master, raw_master_label, by = c("pmid"), all.x = TRUE, all.y = TRUE)
raw_master_full <- raw_master_full %>%
select("pmid", "sex", "date_of_birth","label")
raw_master_full <- raw_master_full[raw_master_full$pmid %in% raw_master$pmid, ]
levels(raw_master_full$label) <- c(levels(raw_master_full$label), "NoLabel")
raw_master_full[is.na(raw_master_full)] <- "NoLabel"
raw_master_full <- as_tibble(raw_master_full)
# Delete duplicates
raw <- raw %>% distinct(time, .keep_all = TRUE)
# Drop NAs
raw <- na.omit(raw)
# Rename column names in raw data set
names(raw)[1] <- "id"
names(raw)[2] <- "timepoint"
# Add the sepsis label as "treatment"
raw$treatment <- NA
raw$treatment <- as.factor(raw$treatment)
levels(raw$treatment) <- levels(raw_master_full$label)
for (l in 1:nrow(raw)) {
label <- raw_master_full$label[raw_master_full$pmid == as.character(raw$id[l])]
raw$treatment[l] <- as.factor(label)
}
# hRELSA  -----------------------------------------------------------------
# Select the variables to use the hRELSA with
vars <- c("hr", "sao2", "rr", "map", "temperature")
turnvars <- NULL
ambivars <- c("hr", "rr", "map", "temperature")
zvars <- NULL
dropvars <- NULL
# Get reference values
raw_norm <- read_excel("data/reference_values.xlsx", sheet = 1)
# Deletion of pulse
raw_norm <- raw_norm %>% select("age", all_of(vars))
# Generate day column
raw <- hrelsa_days(raw, format = "timecode", formthis = "timepoint", newdayone = TRUE)
# Deletion of unrealistic entries
raw <- raw %>%
filter(systolicbp > 0 | is.na(systolicbp)) %>%
filter(map > 0 | is.na(diastolicbp)) %>%
filter(temperature > 30 | is.na(temperature)) %>%
filter(map < systolicbp)
# Format the data
dat <- hrelsa_format(raw, id = "id", time = "time", treatment = "treatment", vars = vars, included_realtime = "timepoint")
# Fetch data for maximal severity evaluation
reference_dat <- dat %>% filter(treatment == "NoSepsis")
bsl <- hrelsa_adaptive_baselines(dat, reference_dat, vars = vars, turnvars = turnvars, ambivars = ambivars, realtime = "timepoint",
dob_dat = raw_master_full, dob_data_id_col = 1, dob_data_dob_col = 3,
norm_dat = raw_norm, norm_dat_names = names(raw_norm))
pre <- bsl$pre
# Generate final data
final <- hrelsa_final(pre, bsl, drop = dropvars, turnvars = turnvars, ambivars = ambivars, zvars = zvars)
# Generate some analysis
analysis <- hrelsa_analysis(final)
sink("analysis.txt")
print(analysis)
sink()
analysis
curve <- final %>%
group_by(id, treatment) %>%
summarise(max = max(as.numeric(unlist(rms)), na.rm = TRUE)) %>%
mutate(treatment = factor(treatment, levels = c("NoSepsis","Sepsis"), labels = c("No Sepsis", "Sepsis")))
p5 <- curve %>%
ggplot(aes(x = treatment, y = max, color = treatment)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(), size = 3, alpha = 0.75) +
geom_hline(yintercept=1, linetype="dashed") +
#geom_text(aes(x = 2.4, y = 1.03, label = "Maximum", color = "black")) +
labs (x = "", y = expression('hRELSA'[max])) +
theme_classic() +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 16, face = "bold")) +
scale_color_manual(values = c("#1F77B4","#FF7F0E"))
p5
describeBy(curve$mean, curve$treatment)
describeBy(curve$max, curve$treatment)
t.test(max ~ treatment, data = curve, var.equal = FALSE, alternative = "two.sided")
levels(curve$treatment) <- c("NoSepsis", "Sepsis", NA)
cohensD(max ~ treatment, data = curve)
raw_master_full
raw_master
raw_master_label
# Merge patient information and sepsis labels
raw_master_full <- merge(raw_master, raw_master_label, by = c("pmid"), all.x = TRUE, all.y = TRUE)
raw_master_full
raw_master_full <- merge(raw_master, raw_master_label, by = c("pmid"), all.x = TRUE, all.y = TRUE)
raw_master_full <- raw_master_full[raw_master_full$pmid %in% raw_master$pmid, ]
levels(raw_master_full$label) <- c(levels(raw_master_full$label), "NoLabel")
raw_master_full[is.na(raw_master_full)] <- "NoLabel"
raw_master_full <- as_tibble(raw_master_full)
raw_master_full
analysis
raw
raw_master_full <- merge(raw_master, raw_master_label, by = c("pmid"), all.x = TRUE, all.y = TRUE)
raw_master_full <- raw_master_full[raw_master_full$pmid %in% raw$id, ]
levels(raw_master_full$label) <- c(levels(raw_master_full$label), "NoLabel")
raw_master_full[is.na(raw_master_full)] <- "NoLabel"
raw_master_full <- as_tibble(raw_master_full)
raw_master_full
unique(raw_master_full$pmid)
raw_master_full
unique(raw_master_full$pmid)
length(unique(raw_master_full$pmid))
analysis
raw_master_full
count(raw_master_full$sex == f)
raw_master_full$sex == f
count(raw_master_full$sex == "f")
raw_master_full$sex == "f"
raw_master_full$sex[= "f"]
raw_master_full$sex[raw_master_full$sex = "f"]
summary(raw_master_full$sex)
summary(raw_master_full$label)
raw_master_label <- read.csv("data/Patient_master_data_label.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master_label <- as_tibble(raw_master_label)
raw_master_label <- raw_master_label %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
discharge = as.Date(discharge),
admission = as.Date(admission),
sex = as.factor(label),
label = as.factor(label)
)
raw_master_full <- merge(raw_master, raw_master_label, by = c("pmid"), all.x = TRUE, all.y = TRUE)
raw_master_full <- raw_master_full[raw_master_full$pmid %in% raw$id, ]
levels(raw_master_full$label) <- c(levels(raw_master_full$label), "NoLabel")
raw_master_full[is.na(raw_master_full)] <- "NoLabel"
raw_master_full <- as_tibble(raw_master_full)
raw_master_full
# Patient information with sepsis labels
raw_master_label <- read.csv("data/Patient_master_data_label.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master_label
raw_master
raw_master <- read.csv("data/Patient_master_data.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master <- as_tibble(raw_master)
raw_master <- raw_master %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
date_of_birth = as.Date(date_of_birth),
sex = as.factor(label)
)
# Patient information with sepsis labels
raw_master_label <- read.csv("data/Patient_master_data_label.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master_label <- as_tibble(raw_master_label)
raw_master_label <- raw_master_label %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
discharge = as.Date(discharge),
admission = as.Date(admission),
label = as.factor(label)
)
raw_master_full <- merge(raw_master, raw_master_label, by = c("pmid"), all.x = TRUE, all.y = TRUE)
raw_master_full <- raw_master_full[raw_master_full$pmid %in% raw$id, ]
levels(raw_master_full$label) <- c(levels(raw_master_full$label), "NoLabel")
raw_master_full[is.na(raw_master_full)] <- "NoLabel"
raw_master_full <- as_tibble(raw_master_full)
raw_master_full
# Patient information
raw_master <- read.csv("data/Patient_master_data.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master <- as_tibble(raw_master)
raw_master
# Patient information
raw_master <- read.csv("data/Patient_master_data.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master <- as_tibble(raw_master)
raw_master <- raw_master %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
date_of_birth = as.Date(date_of_birth),
sex = as.factor(sex)
)
# Patient information with sepsis labels
raw_master_label <- read.csv("data/Patient_master_data_label.csv", sep = ";", header = TRUE, dec = ".", row.names = NULL)
raw_master_label <- as_tibble(raw_master_label)
raw_master_label <- raw_master_label %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
discharge = as.Date(discharge),
admission = as.Date(admission),
label = as.factor(label)
)
raw_master_full <- merge(raw_master, raw_master_label, by = c("pmid"), all.x = TRUE, all.y = TRUE)
raw_master_full <- raw_master_full[raw_master_full$pmid %in% raw$id, ]
levels(raw_master_full$label) <- c(levels(raw_master_full$label), "NoLabel")
raw_master_full[is.na(raw_master_full)] <- "NoLabel"
raw_master_full <- as_tibble(raw_master_full)
raw_master_full
summary(raw_master_full$sex)
summary(raw_master_full$date_of_birth)
pre
dat
final
raw
dat
library(hRELSA)
library(tidyverse)
library(janitor)
library(readxl)
library(ggplot2)
library(patchwork)
library(ggsignif)
library(lme4)
library(lmerTest)
library(psych)
library(lubridate)
library(car)
raw_bp
# Write raw in a csv
write.csv(raw, file = "data/raw.csv")
# Write raw in a csv
write.csv(raw, file = "data/raw.csv")
