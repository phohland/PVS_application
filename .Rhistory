dat$pops[s] <- pops
}
dat$pops <- 0
for (s in 1:nrow(dat)) {
pops <- 0
if (dat$sao2[s] < 94 & dat$sao2[s] >= 90) {
pops <- pops + 1
} else if (dat$sao2[s] < 90) {
pops <- pops + 2
} else if (is.na(dat$sao2[s])) {
pops <- NA
}
if ((dat$hr[s] < 110 & dat$hr[s] >= 90) | (dat$hr[s] > 160 & dat$hr[s] <= 180)) {
pops <- pops + 1
} else if (dat$hr[s] < 90 | dat$hr[s] > 180) {
pops <- pops + 2
} else if (is.na(dat$hr[s])) {
pops <- NA
}
if ((dat$rr[s] < 30 & dat$rr[s] >= 25) | (dat$rr[s] > 40 & dat$rr[s] <= 50)) {
pops <- pops + 1
} else if (dat$rr[s] < 25 | dat$rr[s] > 50) {
pops <- pops + 2
} else if (is.na(dat$rr[s])) {
pops <- NA
}
if ((dat$temperature[s] < 36 & dat$temperature[s] >= 35) | (dat$temperature[s] > 37.5 & dat$temperature[s] <= 39)) {
pops <- pops + 1
} else if (dat$temperature[s] < 35 | dat$temperature[s] > 39) {
pops <- pops + 2
} else if (is.na(dat$temperature[s])) {
pops <- NA
}
dat$pops[s] <- pops
}
dat$pops <- 0
for (s in 1:nrow(dat)) {
if (anyNA(dat[s])) {
pops <- NA
} else {
pops <- 0
if (dat$sao2[s] < 94 & dat$sao2[s] >= 90) {
pops <- pops + 1
} else if (dat$sao2[s] < 90) {
pops <- pops + 2
}
if ((dat$hr[s] < 110 & dat$hr[s] >= 90) | (dat$hr[s] > 160 & dat$hr[s] <= 180)) {
pops <- pops + 1
} else if (dat$hr[s] < 90 | dat$hr[s] > 180) {
pops <- pops + 2
}
if ((dat$rr[s] < 30 & dat$rr[s] >= 25) | (dat$rr[s] > 40 & dat$rr[s] <= 50)) {
pops <- pops + 1
} else if (dat$rr[s] < 25 | dat$rr[s] > 50) {
pops <- pops + 2
}
if ((dat$temperature[s] < 36 & dat$temperature[s] >= 35) | (dat$temperature[s] > 37.5 & dat$temperature[s] <= 39)) {
pops <- pops + 1
} else if (dat$temperature[s] < 35 | dat$temperature[s] > 39) {
pops <- pops + 2
}
dat$pops[s] <- pops
}
}
dat$pops <- 0
for (s in 1:nrow(dat)) {
if (anyNA(dat[s])) {
pops <- NA
} else {
pops <- 0
if (dat$sao2[s] < 94 & dat$sao2[s] >= 90) {
pops <- pops + 1
} else if (dat$sao2[s] < 90) {
pops <- pops + 2
}
if ((dat$hr[s] < 110 & dat$hr[s] >= 90) | (dat$hr[s] > 160 & dat$hr[s] <= 180)) {
pops <- pops + 1
} else if (dat$hr[s] < 90 | dat$hr[s] > 180) {
pops <- pops + 2
}
if ((dat$rr[s] < 30 & dat$rr[s] >= 25) | (dat$rr[s] > 40 & dat$rr[s] <= 50)) {
pops <- pops + 1
} else if (dat$rr[s] < 25 | dat$rr[s] > 50) {
pops <- pops + 2
}
if ((dat$temperature[s] < 36 & dat$temperature[s] >= 35) | (dat$temperature[s] > 37.5 & dat$temperature[s] <= 39)) {
pops <- pops + 1
} else if (dat$temperature[s] < 35 | dat$temperature[s] > 39) {
pops <- pops + 2
}
}
dat$pops[s] <- pops
}
nrow(dat)
dat$pops <- 0
for (s in 1:nrow(dat)) {
if (anyNA(dat[s])) {
pops <- NA
} else {
pops <- 0
if (dat$sao2[s] < 94 & dat$sao2[s] >= 90) {
pops <- pops + 1
} else if (dat$sao2[s] < 90) {
pops <- pops + 2
}
if ((dat$hr[s] < 110 & dat$hr[s] >= 90) | (dat$hr[s] > 160 & dat$hr[s] <= 180)) {
pops <- pops + 1
} else if (dat$hr[s] < 90 | dat$hr[s] > 180) {
pops <- pops + 2
}
if ((dat$rr[s] < 30 & dat$rr[s] >= 25) | (dat$rr[s] > 40 & dat$rr[s] <= 50)) {
pops <- pops + 1
} else if (dat$rr[s] < 25 | dat$rr[s] > 50) {
pops <- pops + 2
}
if ((dat$temperature[s] < 36 & dat$temperature[s] >= 35) | (dat$temperature[s] > 37.5 & dat$temperature[s] <= 39)) {
pops <- pops + 1
} else if (dat$temperature[s] < 35 | dat$temperature[s] > 39) {
pops <- pops + 2
}
}
dat$pops[s] <- pops
}
dat$pops <- 0
for (s in 1:nrow(dat)) {
if (anyNA(dat[s, ])) {
pops <- NA
} else {
pops <- 0
if (dat$sao2[s] < 94 & dat$sao2[s] >= 90) {
pops <- pops + 1
} else if (dat$sao2[s] < 90) {
pops <- pops + 2
}
if ((dat$hr[s] < 110 & dat$hr[s] >= 90) | (dat$hr[s] > 160 & dat$hr[s] <= 180)) {
pops <- pops + 1
} else if (dat$hr[s] < 90 | dat$hr[s] > 180) {
pops <- pops + 2
}
if ((dat$rr[s] < 30 & dat$rr[s] >= 25) | (dat$rr[s] > 40 & dat$rr[s] <= 50)) {
pops <- pops + 1
} else if (dat$rr[s] < 25 | dat$rr[s] > 50) {
pops <- pops + 2
}
if ((dat$temperature[s] < 36 & dat$temperature[s] >= 35) | (dat$temperature[s] > 37.5 & dat$temperature[s] <= 39)) {
pops <- pops + 1
} else if (dat$temperature[s] < 35 | dat$temperature[s] > 39) {
pops <- pops + 2
}
}
dat$pops[s] <- pops
}
# Figure 8
curve0 <- final %>%
mutate(hours = round(time/(60*60), digits = 0),
minutes = round(time/60, digits = 0),
days = round(time/((60*60)*24))) %>%
group_by(treatment, id) %>%
summarise(max = max(as.numeric(unlist(rms)), na.rm = TRUE))
curve00 <- dat %>%
mutate(hours = round(time/(60*60), digits = 0),
minutes = round(time/60, digits = 0),
days = round(time/((60*60)*24))) %>%
group_by(treatment, id) %>%
summarise(max = max(as.numeric(pops), na.rm = TRUE))
popstest <- lm(curve0$max ~ curve00$max)
summary(popstest)
p8 <- ggplot(fortify(popstest), aes(x = curve00$max, y = curve0$max)) +
geom_point(size = 3, alpha = 0.75) +
geom_smooth(method = "lm", color = "#1F77B4") +
geom_hline(yintercept=1, linetype="dashed") +
ylim(0,1) +
xlim(0,8) +
labs (x = "highest POPS", y = expression('hRELSA'[max]), color = "") +
scale_color_manual(values = c( "#1F77B4")) +
theme_classic() +
theme(legend.position = "none",
axis.text = element_text(size = 13),
axis.title = element_text(size = 18))
p8
ggsave("figs/figure8.tiff", plot = p8, dpi = 300, compression = "lzw")
dat
ventilation <-
read.csv(
"data/Ventilation.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
ventilation <- as_tibble(ventilation)
library(tidyverse)
library(janitor)
library(readxl)
ventilation
ventilation <- as_tibble(ventilation)
ventilation
ventilation <- ventilation %>%
clean_names
ventilation
ventilation <-
read.csv(
"data/Ventilation.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
ventilation <- as_tibble(ventilation)
names(ventilation)[1] <- "pmid"
names(ventilation)[4] <- "time"
names(ventilation)[5] <- "ventilation"
ventilation <- ventilation %>%
select("pmid", "time", "ventilation") %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
time = as.POSIXct(timestamp, tz = ""),
ventilation = as.factor(result)
)
ventilation <-
read.csv(
"data/Ventilation.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
ventilation <- as_tibble(ventilation)
names(ventilation)[1] <- "pmid"
names(ventilation)[4] <- "time"
names(ventilation)[5] <- "ventilation"
ventilation <- ventilation %>%
select("pmid", "time", "ventilation") %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
time = as.POSIXct(time, tz = ""),
ventilation = as.factor(result)
)
ventilation <-
read.csv(
"data/Ventilation.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
ventilation <- as_tibble(ventilation)
names(ventilation)[1] <- "pmid"
names(ventilation)[4] <- "time"
names(ventilation)[5] <- "ventilation"
ventilation <- ventilation %>%
select("pmid", "time", "ventilation") %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
time = as.POSIXct(time, tz = ""),
ventilation = as.factor(ventilation)
)
ventilation
# Temperature Regulations
temp_reg <-
read.csv(
"data/Temperature_regulation.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
temp_reg
regulated_ids <- unique(temp_reg$pmid)
regulated_ids
temp_reg$pmid
regulated_ids <- unique(temp_reg$PMID)
regulated_ids
sirs <-
read.csv(
"data/SIRS_label.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
sirs <- as_tibble(sirs)
sirs
# SIRS labels (duration)
sirs <-
read.csv(
"data/SIRS_label.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
sirs <- as_tibble(sirs)
names(ventilation)[1] <- "pmid"
names(ventilation)[3] <- "start"
names(ventilation)[4] <- "end"
ventilation <- ventilation %>%
select("pmid", "start", "end") %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
start = as.POSIXct(start, tz = ""),
end = as.POSIXct(end, tz = ""),
)
# SIRS labels (duration)
sirs <-
read.csv(
"data/SIRS_label.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
sirs <- as_tibble(sirs)
names(sirs)[1] <- "pmid"
names(sirs)[3] <- "start"
names(sirs)[4] <- "end"
sirs <- sirs %>%
select("pmid", "start", "end") %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
start = as.POSIXct(start, tz = ""),
end = as.POSIXct(end, tz = ""),
)
sirs
ventilation <-
read.csv(
"data/Ventilation.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
ventilation <- as_tibble(ventilation)
names(ventilation)[1] <- "pmid"
names(ventilation)[4] <- "time"
names(ventilation)[5] <- "ventilation"
ventilation <- ventilation %>%
select("pmid", "time", "ventilation") %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
time = as.POSIXct(time, tz = ""),
ventilation = as.factor(ventilation)
)
sepsis <-
read.csv(
"data/Sepsis_label.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
sepsis <- as_tibble(sepsis)
sepsis
sepsis <-
read.csv(
"data/Sepsis_label.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
sepsis <- as_tibble(sepsis)
names(sepsis)[1] <- "pmid"
names(sepsis)[3] <- "start"
names(sepsis)[4] <- "end"
names(sepsis)[5] <- "sepsis"
sirs <- sirs %>%
select("pmid", "start", "end", "sepsis") %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
start = as.POSIXct(start, tz = ""),
end = as.POSIXct(end, tz = ""),
sepsis = as.factor(sepsis)
)
sepsis
sepsis <-
read.csv(
"data/Sepsis_label.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
sepsis <- as_tibble(sepsis)
names(sepsis)[1] <- "pmid"
names(sepsis)[3] <- "start"
names(sepsis)[4] <- "end"
names(sepsis)[5] <- "sepsis"
sepsis <- sepsis %>%
select("pmid", "start", "end", "sepsis") %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
start = as.POSIXct(start, tz = ""),
end = as.POSIXct(end, tz = ""),
sepsis = as.factor(sepsis)
)
sepsis
cat <-
read.csv(
"data/Medication_catecholamines.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
cat <- as_tibble(cat)
cat
cat <-
read.csv(
"data/Medication_catecholamines.csv",
sep = ";",
header = TRUE,
dec = ".",
row.names = NULL
)
cat <- as_tibble(cat)
names(cat)[1] <- "pmid"
names(cat)[3] <- "start"
names(cat)[4] <- "end"
cat <- cat %>%
select("pmid", "start", "end") %>%
clean_names %>%
mutate(
pmid = as.factor(pmid),
start = as.POSIXct(start, tz = ""),
end = as.POSIXct(end, tz = "")
)
cat
raw
list (cat, sepsis)
duration_output <- list(sirs, sepsis, ventilation, cat)
duration_output
# duration_output
write.csv(duration_output, file = "output/time_labels.csv")
duration_output <- list(sirs, sepsis, ventilation, cat)
write.csv(sirs, file = "output/sirs_labels.csv")
write.csv(sepsis, file = "output/sepsis_labels.csv")
write.csv(ventilation, file = "output/ventilation_labels.csv")
write.csv(cat, file = "output/cat_labels.csv")
dat
sirs
sepsis
sepsis$sepsis
sirs
dat
sirs$pmid
duplicated(sirs$pmid)
i <- 1
dat$pmid[i] %in% sirs$pmid
sirs
dat$pmid[i] %in% sirs$pmid
dat$id[i] %in% sirs$pmid
dat
dat$sirs <- FALSE
for (i in 1:nrow(dat)) {
if (dat$id[i] %in% sirs$pmid) {
for (o in 1:nrow(sirs)) {
if (sirs$pmid[o] == dat$id[i]) {
if (dat$timepoint[i] >= sirs$start[o] & dat$timepoint[i] <= sirs$end[o]) {
dat$sirs[i] <- TRUE
}
}
}
}
}
dat
dat$sirs
sepsis
sepsis$sepsis
dat$proven_sepsis <- FALSE
dat$sus_sepsis <- FALSE
dat$infection <- FALSE
for (i in 1:nrow(dat)) {
if (dat$id[i] %in% sepsis$pmid) {
for (o in 1:nrow(sepsis)) {
if (sepsis$pmid[o] == dat$id[i]) {
if (dat$timepoint[i] >= sepsis$start[o] & dat$timepoint[i] <= sepsis$end[o]) {
if (sepsis$sepsis[o] == "Proven Sepsis") {
dat$proven_sepsis[i] <- TRUE
} else if (sepsis$sepsis[o] == "Suspected Sepsis") {
dat$sus_sepsis[i] <- TRUE
} else if (sepsis$sepsis[o] == "Infection") {
dat$infection[i] <- TRUE
}
}
}
}
}
}
dat
sepsis
ventilation
dat$ventilation <- FALSE
for (i in 1:nrow(dat)) {
if (dat$id[i] %in% ventilation$pmid) {
for (o in 1:nrow(ventilation)) {
if (ventilation$pmid[o] == dat$id[i]) {
if (dat$timepoint[i] == ventilation$time[o]) {
dat$ventilation[i] <- TRUE
}
}
}
}
}
